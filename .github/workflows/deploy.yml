name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2  # 서울 리전

      - name: Debug SSH connection
        run: |
              ssh -v -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }}
  
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace  # 기존 키가 있으면 덮어쓰기
          config: |               # SSH 구성 추가
            Host ${{ secrets.EC2_HOST }}
              IdentityFile ~/.ssh/id_rsa
              StrictHostKeyChecking yes
    
          
      
    
      - name: Deploy to EC2
        run: |
          # 코드 전송
          rsync -avz --exclude='.git/' --exclude='node_modules/' ./ ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/schedulia/
          
          # .env 파일 생성
          ssh ec2-user@${{ secrets.EC2_HOST }} "cat > /home/ec2-user/schedulia/.env << 'EOL'
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}
          GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          EOL"
          
          # 배포 실행
          ssh ec2-user@${{ secrets.EC2_HOST }} "cd /home/ec2-user/schedulia && docker-compose down && docker-compose up --build -d"
